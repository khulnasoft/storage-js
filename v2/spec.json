{
	"id": 0,
	"name": "@khulnasoft/storage-js",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 471,
					"name": "StorageApiError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 472,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 473,
									"name": "new StorageApiError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 474,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 475,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 471,
										"name": "StorageApiError"
									},
									"overwrites": {
										"type": "reference",
										"id": 468,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 467,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 476,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 477,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 23,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 479,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 481,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 26,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 480,
													"name": "name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 25,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 482,
													"name": "status",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 27,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														481,
														480,
														482
													]
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								472
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								476
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								477
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 466,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 318,
					"name": "StorageClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 319,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 6,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 320,
									"name": "new StorageClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 321,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 322,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 323,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 324,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 325,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 326,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 327,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 328,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 329,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"qualifiedName": "RequestInfo",
																				"package": "typescript",
																				"name": "RequestInfo"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "URL",
																				"package": "typescript",
																				"name": "URL"
																			}
																		]
																	}
																},
																{
																	"id": 330,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														},
														{
															"id": 331,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 332,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Request",
																				"package": "typescript",
																				"name": "Request"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "URL",
																				"package": "typescript",
																				"name": "URL"
																			}
																		]
																	}
																},
																{
																	"id": 333,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 318,
										"name": "StorageClient"
									},
									"overwrites": {
										"type": "reference",
										"id": 5,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 4,
								"name": "default.constructor"
							}
						},
						{
							"id": 367,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 83,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 368,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id\n"
									},
									"parameters": [
										{
											"id": 369,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 370,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 371,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 374,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 88,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 373,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 87,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 372,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 86,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																374,
																373,
																372
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 375,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 376,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 94,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 419,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 377,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 95,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		376,
																		377
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 378,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 379,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 98,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 380,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 99,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		379,
																		380
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 50,
										"name": "default.createBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 49,
								"name": "default.createBucket"
							}
						},
						{
							"id": 408,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 215,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 409,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 410,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 411,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 412,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 217,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 413,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 414,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 217,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						414
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 415,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 218,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		412,
																		415
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 416,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 417,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 221,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 418,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 222,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		417,
																		418
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 91,
										"name": "default.deleteBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "default.deleteBucket"
							}
						},
						{
							"id": 397,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 182,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 398,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 399,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 400,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 401,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 184,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 402,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 403,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 184,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						403
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 404,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 185,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		401,
																		404
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 405,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 406,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 407,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 189,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		406,
																		407
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 80,
										"name": "default.emptyBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "default.emptyBucket"
							}
						},
						{
							"id": 334,
							"name": "from",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 15,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 335,
									"name": "from",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform file operation in a bucket."
									},
									"parameters": [
										{
											"id": 336,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The bucket id to operate on.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 102,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 358,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 359,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 360,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 361,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 362,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 50,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 419,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 363,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 51,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		362,
																		363
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 364,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 365,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 54,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 366,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 55,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		365,
																		366
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 41,
										"name": "default.getBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 40,
								"name": "default.getBucket"
							}
						},
						{
							"id": 350,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 21,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 351,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 352,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 353,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 23,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 419,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 354,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 24,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		353,
																		354
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 355,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 356,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 27,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 357,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 28,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		356,
																		357
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 33,
										"name": "default.listBuckets"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 32,
								"name": "default.listBuckets"
							}
						},
						{
							"id": 381,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 137,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 382,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a Storage bucket"
									},
									"parameters": [
										{
											"id": 383,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 384,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 385,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 388,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 142,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 387,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 141,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 386,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 140,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																388,
																387,
																386
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 389,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 390,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 146,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 391,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 392,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 146,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						392
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 393,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 147,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		390,
																		393
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 394,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 395,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 150,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 396,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 151,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		395,
																		396
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 64,
										"name": "default.updateBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 63,
								"name": "default.updateBucket"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								319
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								367,
								408,
								397,
								334,
								358,
								350,
								381
							]
						}
					],
					"sources": [
						{
							"fileName": "src/StorageClient.ts",
							"line": 5,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3,
							"name": "default"
						}
					]
				},
				{
					"id": 466,
					"name": "StorageError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 467,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 4,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 468,
									"name": "new StorageError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 469,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 466,
										"name": "StorageError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								467
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 1,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 471,
							"name": "StorageApiError"
						},
						{
							"type": "reference",
							"id": 484,
							"name": "StorageUnknownError"
						}
					]
				},
				{
					"id": 484,
					"name": "StorageUnknownError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 485,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 35,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 486,
									"name": "new StorageUnknownError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 487,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 488,
											"name": "originalError",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 484,
										"name": "StorageUnknownError"
									},
									"overwrites": {
										"type": "reference",
										"id": 468,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 467,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 489,
							"name": "originalError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								485
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								489
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 32,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 466,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 419,
					"name": "Bucket",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 424,
							"name": "allowed_mime_types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 425,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 7,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 423,
							"name": "file_size_limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 420,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 421,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 422,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 427,
							"name": "public",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 426,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								424,
								425,
								423,
								420,
								421,
								422,
								427,
								426
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1,
							"character": 17
						}
					]
				},
				{
					"id": 446,
					"name": "DestinationOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 447,
							"name": "destinationBucket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 49,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								447
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 48,
							"character": 17
						}
					]
				},
				{
					"id": 453,
					"name": "FetchParameters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 454,
							"name": "signal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in an AbortController's signal to cancel the request."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AbortSignal",
								"package": "typescript",
								"name": "AbortSignal"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								454
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 74,
							"character": 17
						}
					]
				},
				{
					"id": 428,
					"name": "FileObject",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 430,
							"name": "bucket_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 437,
							"name": "buckets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 419,
								"name": "Bucket"
							}
						},
						{
							"id": 434,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 432,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 435,
							"name": "last_accessed_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 436,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 429,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 431,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 433,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								430,
								437,
								434,
								432,
								435,
								436,
								429,
								431,
								433
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 12,
							"character": 17
						}
					]
				},
				{
					"id": 441,
					"name": "FileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 442,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of seconds the asset is cached in the browser and in the Khulnasoft CDN. This is set in the `Cache-Control: max-age=<seconds>` header. Defaults to 3600 seconds."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 443,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 445,
							"name": "duplex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 444,
							"name": "upsert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								442,
								443,
								445,
								444
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 29,
							"character": 17
						}
					]
				},
				{
					"id": 455,
					"name": "Metadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 456,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 83,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								456
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 82,
							"character": 17
						}
					]
				},
				{
					"id": 448,
					"name": "SearchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 449,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": " The number of files you want to be returned."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 450,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The starting position."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 452,
							"name": "search",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The search string to filter files by."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 451,
							"name": "sortBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The column to sort by. Can be any column inside a FileObject."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 438,
								"name": "SortBy"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								449,
								450,
								452,
								451
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 52,
							"character": 17
						}
					]
				},
				{
					"id": 438,
					"name": "SortBy",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 439,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 440,
							"name": "order",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								439,
								440
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 24,
							"character": 17
						}
					]
				},
				{
					"id": 457,
					"name": "TransformOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 462,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the format of the image requested.",
								"text": "When using 'origin' we force the format to be the same as the original image.\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "origin"
							}
						},
						{
							"id": 459,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the image in pixels."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 94,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 461,
							"name": "quality",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Set the quality of the returned image.\nA number from 20 to 100, with 100 being the highest quality.\nDefaults to 80"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 460,
							"name": "resize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "fill"
									},
									{
										"type": "literal",
										"value": "contain"
									},
									{
										"type": "literal",
										"value": "cover"
									}
								]
							}
						},
						{
							"id": 458,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the image in pixels."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								462,
								459,
								461,
								460,
								458
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 86,
							"character": 17
						}
					]
				},
				{
					"id": 463,
					"name": "isStorageError",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 464,
							"name": "isStorageError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 465,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 466,
									"name": "StorageError"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						471,
						318,
						466,
						484
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						419,
						446,
						453,
						428,
						441,
						455,
						448,
						438,
						457
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						463
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "packages/StorageBucketApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 12,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 5,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 7,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 8,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 9,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 10,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 11,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 12,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 13,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 14,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"qualifiedName": "RequestInfo",
																				"package": "typescript",
																				"name": "RequestInfo"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "URL",
																				"package": "typescript",
																				"name": "URL"
																			}
																		]
																	}
																},
																{
																	"id": 15,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														},
														{
															"id": 16,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 17,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Request",
																				"package": "typescript",
																				"name": "Request"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "URL",
																				"package": "typescript",
																				"name": "URL"
																			}
																		]
																	}
																},
																{
																	"id": 18,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 49,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 83,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 50,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id\n"
									},
									"parameters": [
										{
											"id": 51,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 52,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 53,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 56,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 88,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 55,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 87,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 54,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 86,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																56,
																55,
																54
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 57,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 58,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 94,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 419,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 59,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 95,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		58,
																		59
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 60,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 61,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 98,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 62,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 99,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		61,
																		62
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 90,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 215,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 91,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 92,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 93,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 94,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 217,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 95,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 96,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 217,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						96
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 97,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 218,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		94,
																		97
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 98,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 99,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 221,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 100,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 222,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		99,
																		100
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 79,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 182,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 80,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 81,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 82,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 83,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 184,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 84,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 85,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 184,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						85
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 86,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 185,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		83,
																		86
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 87,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 88,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 89,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 189,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		88,
																		89
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 40,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 42,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 43,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 44,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 50,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 419,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 45,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 51,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		44,
																		45
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 46,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 47,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 54,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 48,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 55,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		47,
																		48
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 32,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 21,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 34,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 35,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 23,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 419,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 36,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 24,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		35,
																		36
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 38,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 27,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 39,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 28,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		38,
																		39
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 63,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 137,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 64,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a Storage bucket"
									},
									"parameters": [
										{
											"id": 65,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 66,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 67,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 70,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 142,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 69,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 141,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 68,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 140,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																70,
																69,
																68
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 71,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 72,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 146,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 73,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 74,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 146,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						74
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 75,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 147,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		72,
																		75
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 76,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 77,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 150,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 78,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 151,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		77,
																		78
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								49,
								90,
								79,
								40,
								32,
								63
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageBucketApi.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 318,
							"name": "StorageClient"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageBucketApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 101,
			"name": "packages/StorageFileApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 102,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 103,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 46,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 104,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 105,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 106,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 107,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 108,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 109,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 110,
											"name": "bucketId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 111,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 112,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 113,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 114,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"qualifiedName": "RequestInfo",
																				"package": "typescript",
																				"name": "RequestInfo"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "URL",
																				"package": "typescript",
																				"name": "URL"
																			}
																		]
																	}
																},
																{
																	"id": 115,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														},
														{
															"id": 116,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 117,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Request",
																				"package": "typescript",
																				"name": "Request"
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "URL",
																				"package": "typescript",
																				"name": "URL"
																			}
																		]
																	}
																},
																{
																	"id": 118,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 102,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 220,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 345,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 221,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Copies an existing file to a new path in the same bucket."
									},
									"parameters": [
										{
											"id": 222,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 223,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-copy.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 224,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The destination options.\n"
											},
											"type": {
												"type": "reference",
												"id": 446,
												"name": "DestinationOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 225,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 226,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 351,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 227,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 228,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 351,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						228
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 229,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 352,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		226,
																		229
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 230,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 231,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 355,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 232,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 356,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		231,
																		232
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 179,
							"name": "createSignedUploadUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 224,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 180,
									"name": "createSignedUploadUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a signed upload URL.\nSigned upload URLs can be used to upload files to the bucket without further authentication.\nThey are valid for 2 hours."
									},
									"parameters": [
										{
											"id": 181,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the current file name. For example `folder/image.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 182,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 183,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 226,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 184,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 187,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 226,
																							"character": 50
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 185,
																					"name": "signedUrl",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 226,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 186,
																					"name": "token",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 226,
																							"character": 35
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						187,
																						185,
																						186
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 188,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 227,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		183,
																		188
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 189,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 230,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 191,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 231,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190,
																		191
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 233,
							"name": "createSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 389,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 234,
									"name": "createSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a signed URL. Use a signed URL to share a file for a fixed amount of time."
									},
									"parameters": [
										{
											"id": 235,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 236,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 237,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 238,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 239,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 392,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 240,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 392,
																	"character": 45
																}
															],
															"type": {
																"type": "reference",
																"id": 457,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																239,
																240
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 241,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 242,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 395,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 243,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 244,
																					"name": "signedUrl",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 395,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						244
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 245,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 396,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		242,
																		245
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 246,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 247,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 399,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 248,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 400,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		247,
																		248
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 249,
							"name": "createSignedUrls",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 434,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 250,
									"name": "createSignedUrls",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time."
									},
									"parameters": [
										{
											"id": 251,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 252,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 253,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 254,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 255,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 437,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																255
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 256,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 257,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 440,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 258,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 259,
																						"name": "error",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 440,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 260,
																						"name": "path",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 440,
																								"character": 38
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 261,
																						"name": "signedUrl",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 440,
																								"character": 59
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							259,
																							260,
																							261
																						]
																					}
																				]
																			}
																		}
																	}
																},
																{
																	"id": 262,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 441,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		257,
																		262
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 263,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 264,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 444,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 265,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 445,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		264,
																		265
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 266,
							"name": "download",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 483,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 267,
									"name": "download",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead."
									},
									"parameters": [
										{
											"id": 268,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The full path and file name of the file to be downloaded. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 269,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 270,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 271,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 485,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"id": 457,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																271
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 272,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 273,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 488,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"qualifiedName": "Blob",
																		"package": "typescript",
																		"name": "Blob"
																	}
																},
																{
																	"id": 274,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 489,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		273,
																		274
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 275,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 276,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 492,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 277,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 493,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		276,
																		277
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 278,
							"name": "getPublicUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 526,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "getPublicUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\nThis function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset."
									},
									"parameters": [
										{
											"id": 280,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The path and name of the file to generate the public URL for. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 281,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 282,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 283,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 528,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 284,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 528,
																	"character": 45
																}
															],
															"type": {
																"type": "reference",
																"id": 457,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																283,
																284
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 285,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 286,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/packages/StorageFileApi.ts",
															"line": 529,
															"character": 7
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 287,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 288,
																	"name": "publicUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 529,
																			"character": 15
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		288
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														286
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 298,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 658,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 299,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Lists all the files within a bucket."
									},
									"parameters": [
										{
											"id": 300,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The folder path.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 301,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 448,
												"name": "SearchOptions"
											}
										},
										{
											"id": 302,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 453,
												"name": "FetchParameters"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 303,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 304,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 664,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 428,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 305,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 665,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		304,
																		305
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 306,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 307,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 668,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 308,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 669,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		307,
																		308
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 207,
							"name": "move",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 302,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 208,
									"name": "move",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Moves an existing file to a new path in the same bucket."
									},
									"parameters": [
										{
											"id": 209,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 210,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-new.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 211,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The destination options.\n"
											},
											"type": {
												"type": "reference",
												"id": 446,
												"name": "DestinationOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 212,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 213,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 308,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 214,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 215,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 308,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						215
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 216,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 309,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		213,
																		216
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 217,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 218,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 312,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 219,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 313,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		218,
																		219
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 289,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 564,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 290,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes files within the same bucket"
									},
									"parameters": [
										{
											"id": 291,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 292,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 293,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 566,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 428,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 294,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 567,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		293,
																		294
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 295,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 296,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 570,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 297,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 571,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		296,
																		297
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 192,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 268,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Replaces an existing file at the specified path with a new one."
									},
									"parameters": [
										{
											"id": 194,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 195,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBufferView",
														"package": "typescript",
														"name": "ArrayBufferView"
													},
													{
														"type": "reference",
														"qualifiedName": "Blob",
														"package": "typescript",
														"name": "Blob"
													},
													{
														"type": "reference",
														"qualifiedName": "FormData",
														"package": "typescript",
														"name": "FormData"
													},
													{
														"type": "reference",
														"qualifiedName": "URLSearchParams",
														"package": "typescript",
														"name": "URLSearchParams"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "Uint8Array",
																"package": "typescript",
																"name": "Uint8Array"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"qualifiedName": "global.Buffer",
														"package": "@types/node",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"qualifiedName": "global.NodeJS.ReadableStream",
														"package": "@types/node",
														"name": "ReadableStream"
													}
												]
											}
										},
										{
											"id": 196,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 441,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 197,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 198,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 284,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 199,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 202,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 284,
																							"character": 42
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 200,
																					"name": "id",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 284,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 201,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 284,
																							"character": 28
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						202,
																						200,
																						201
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 203,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 285,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		198,
																		203
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 204,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 205,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 288,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 206,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 289,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		205,
																		206
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 149,
							"name": "upload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 136,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 150,
									"name": "upload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads a file to an existing bucket."
									},
									"parameters": [
										{
											"id": 151,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 152,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "reference",
												"name": "FileBody"
											}
										},
										{
											"id": 153,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 441,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 154,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 155,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 142,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 156,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 159,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 142,
																							"character": 42
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 157,
																					"name": "id",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 142,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 158,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 142,
																							"character": 28
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						159,
																						157,
																						158
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 160,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 143,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		155,
																		160
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 161,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 162,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 146,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 163,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 147,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 466,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		162,
																		163
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 164,
							"name": "uploadToSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 159,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 165,
									"name": "uploadToSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Upload a file with a token generated from `createSignedUploadUrl`."
									},
									"parameters": [
										{
											"id": 166,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 167,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The token generated from `createSignedUploadUrl`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 168,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "reference",
												"name": "FileBody"
											}
										},
										{
											"id": 169,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 441,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 170,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 171,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 202,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 172,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 174,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 202,
																							"character": 35
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"defaultValue": "data.Key"
																				},
																				{
																					"id": 173,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 202,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "cleanPath"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						174,
																						173
																					]
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 175,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 203,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	},
																	"defaultValue": "null"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		171,
																		175
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 176,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 177,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 207,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	},
																	"defaultValue": "null"
																},
																{
																	"id": 178,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		177,
																		178
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								103
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								220,
								179,
								233,
								249,
								266,
								278,
								298,
								207,
								289,
								192,
								149,
								164
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageFileApi.ts",
							"line": 40,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						102
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageFileApi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1,
				2,
				101
			]
		}
	]
}